#define tempLength 5
#define E 0
#define T 1
#define F 2
int TempCnt = 1;// 临时变量计数器, T1, T2, ...
vector<string> quaternios; // 四元式容器
// 构造SLR(1)分析表，共有15个状态，需要构造ACTION表与GOTO表,然后用不同的函数处理
string Action[16][8] =
        {
                "s4", "0", "0", "0", "0", "0", "s5", "0",        //  0
                "0", "0", "s6", "s7", "0", "0", "0", "acc",      //  1
                "0", "r3", "r3", "r3", "s8", "s9", "0", "r3",    //  2
                "0", "r6", "r6", "r6", "r6", "r6", "0", "r6",    //  3
                "s4", "0", "0", "0", "0", "0", "s5", "0",        //  4
                "0", "r8", "r8", "r8", "r8", "r8", "0", "r8",    //  5
                "s4", "0", "0", "0", "0", "0", "s5", "0",        //  6
                "s4", "0", "0", "0", "0", "0", "s5", "0",        //  7
                "s4", "0", "0", "0", "0", "0", "s5", "0",        //  8
                "s4", "0", "0", "0", "0", "0", "s5", "0",        //  9
                "0", "s15", "s6", "s7", "0", "0", "0", "0",      //  10
                "0", "r1", "r1", "r1", "s8", "s9", "0", "r1",    //  11
                "0", "r2", "r2", "r2", "s8", "s9", "0", "r2",    //  12
                "0", "r4", "r4", "r4", "r4", "r4", "0", "r4",    //  13
                "0", "r5", "r5", "r5", "r5", "r5", "0", "r5",    //  14
                "0", "r7", "r7", "r7", "r7", "r7", "0", "r7"     //  15
        };
int Goto[16][3] =
        {
                1, 2, 3,
                0, 0, 0,
                0, 0, 0,
                0, 0, 0,
                10, 2, 3,
                0, 0, 0,
                0, 11, 3,
                0, 12, 3,
                0, 0, 13,
                0, 0, 14,
                0
        };
static const std::unordered_map<std::string, int> wordMap = {
        {"LP",   0},
        {"RP",   1},
        {"PL",   2},
        {"MI",   3},
        {"MU",   4},
        {"DI",   5},
        {"ID",   6},
        {"INT",  6},
        {"REAL", 6},
        {"#",    7}
};
char *NewTemp(){ // 产生一个临时变量
    char *TempID = (char *) malloc(tempLength);
    sprintf(TempID, "T%d", TempCnt++);
    return TempID;
}
struct TempWord {
    int num; // 状态
    WORD word; // 语义信息
};